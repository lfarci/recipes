name: Build and deploy the frontend static web application

env:
  AZURE_STATIC_WEBAPP_NAME: lfarci-recipes-dev-site
  DOTNET_VERSION: '8.0.x'
  SCRIPTS_DIRECTORY: './infra/scripts'
  RECIPES_APP_CSPROJ: 'src/Recipes.Web/Recipes.Web.csproj'
  AZURE_CLI_VERSION: '2.63.0' # Keep this version as long as there is no update on https://github.com/Azure/cli/issues/165

on:
  push:
    branches:
      - master
    paths:
      - 'src/Recipes.Web/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build -c Release ${{ env.RECIPES_APP_CSPROJ }}

      - name: Create appsettings.json
        run: |
          chmod +x ${{ env.SCRIPTS_DIRECTORY }}/create_site_appsettings.sh
          ${{ env.SCRIPTS_DIRECTORY }}/create_site_appsettings.sh \
            --id ${{ vars.SITE_CLIENT_ID }} \
            --uri ${{ vars.SITE_URI }} \
            --api-id ${{ vars.API_CLIENT_ID }} \
            --api-uri ${{ vars.API_URI }} \
            --tenant-id ${{ secrets.AZURE_TENANT_ID }} \
            --output ${{env.DOTNET_ROOT}}/myapp/wwwroot/appsettings.json

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp ${{ env.RECIPES_APP_CSPROJ }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: blazor-wasm-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-static-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        id: download-blazor-wasm-app
        uses: actions/download-artifact@v4
        with:
          name: blazor-wasm-app

      - name: Set up Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get deployment token for ${{ env.AZURE_STATIC_WEBAPP_NAME }} static web app
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZURE_CLI_VERSION }}
          inlineScript: |
            token=$(az staticwebapp secrets list --name ${{ vars.SITE_NAME }} | jq -r ".properties.apiKey")
            echo "DEPLOYMENT_TOKEN=$token" >> $GITHUB_ENV

      - name: Deploy to ${{ env.AZURE_STATIC_WEBAPP_NAME }} static web app
        id: deploy-to-static-webapp
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "wwwroot"
          output_location: ""
          skip_app_build: true
          skip_api_build: true
