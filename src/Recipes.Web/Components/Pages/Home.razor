@page "/"
@attribute [Authorize]

@using Microsoft.FluentUI.AspNetCore.Components

@inject IUserService UserService
@inject IRecipesService RecipeService

<PageTitle>Recipes</PageTitle>

@if (Loading)
{
    <p>Loading...</p>
}
else
{
    @if (RecipesCollection.Any())
    {
        <FluentStack Orientation="Orientation.Vertical">
            @foreach (var recipe in RecipesCollection)
            {
                <FluentCard>
                    <p>@recipe.Name</p>
                    <p>@recipe.Description</p>
                </FluentCard>
            }
        </FluentStack>
    }
    else
    {
        <p>No recipes found.</p>
    }
}

@code {
    public IEnumerable<RecipeResponse> RecipesCollection = new List<RecipeResponse>();
    public UserResponse? User = null;
    public bool Loading = true;

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUser();
        RecipesCollection = await RecipeService.GetRecipes();
        Loading = false;
    }
}

<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
    }

    .card {
        margin: 10px;
    }
</style>